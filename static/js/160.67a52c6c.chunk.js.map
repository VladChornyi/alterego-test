{"version":3,"file":"static/js/160.67a52c6c.chunk.js","mappings":"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","sources":["pages/SignUpPage/SignUpPage.tsx"],"sourcesContent":["import React, { ChangeEvent, useState } from \"react\";\nimport axios, { AxiosError } from \"axios\";\nimport { Link } from \"react-router-dom\";\nimport { useTranslation } from \"react-i18next\";\nimport { toast } from \"react-toastify\";\nimport Avatar from \"@mui/material/Avatar\";\nimport Button from \"@mui/material/Button\";\nimport CssBaseline from \"@mui/material/CssBaseline\";\nimport TextField from \"@mui/material/TextField\";\nimport Grid from \"@mui/material/Grid\";\nimport Box from \"@mui/material/Box\";\nimport LockOutlinedIcon from \"@mui/icons-material/LockOutlined\";\nimport Typography from \"@mui/material/Typography\";\nimport Container from \"@mui/material/Container\";\nimport { signUpService } from \"../../services/auth-services\";\nimport { useAppDispatch } from \"../../redux/store\";\nimport { signInThunk } from \"../../redux/auth/auth-thunk\";\n\nexport const SignUpPage = () => {\n  const { t } = useTranslation();\n  const dispatch = useAppDispatch();\n  const [email, setEmail] = useState(\"\");\n  const [password, setPassword] = useState(\"\");\n  const [first_name, setFirst_name] = useState(\"\");\n  const [last_name, setLast_name] = useState(\"\");\n\n  const userMap = {\n    email: setEmail,\n    password: setPassword,\n    first_name: setFirst_name,\n    last_name: setLast_name,\n  };\n\n  const handleChangeInput = (e: ChangeEvent<HTMLInputElement>) => {\n    const { name, value } = e.target;\n    userMap[name as keyof typeof userMap](value);\n  };\n\n  const handleSubmit = async (event: React.FormEvent<HTMLFormElement>) => {\n    event.preventDefault();\n    try {\n      await signUpService({ email, password, first_name, last_name });\n      dispatch(signInThunk({ email, password }));\n    } catch (e) {\n      const error = e as Error | AxiosError;\n      if (axios.isAxiosError(error)) {\n        toast.error(error.response?.data.detail);\n      }\n    }\n  };\n\n  return (\n    <Container component=\"main\" maxWidth=\"xs\">\n      <CssBaseline />\n      <Box\n        sx={{\n          marginTop: 4,\n          display: \"flex\",\n          flexDirection: \"column\",\n          alignItems: \"center\",\n        }}\n      >\n        <Avatar sx={{ m: 1, bgcolor: \"secondary.main\" }}>\n          <LockOutlinedIcon />\n        </Avatar>\n        <Typography component=\"h1\" variant=\"h5\">\n          {t(\"SignUp\")}\n        </Typography>\n        <Box component=\"form\" onSubmit={handleSubmit} sx={{ mt: 3 }}>\n          <Grid container spacing={2}>\n            <Grid item xs={12} sm={6}>\n              <TextField\n                autoComplete=\"given-name\"\n                name=\"first_name\"\n                required\n                fullWidth\n                onChange={handleChangeInput}\n                value={first_name}\n                inputProps={{ minLength: 3 }}\n                id=\"first_name\"\n                label={t(\"firstName\")}\n                autoFocus\n              />\n            </Grid>\n            <Grid item xs={12} sm={6}>\n              <TextField\n                required\n                onChange={handleChangeInput}\n                fullWidth\n                inputProps={{ minLength: 3 }}\n                id=\"last_name\"\n                label={t(\"surname\")}\n                name=\"last_name\"\n                autoComplete=\"family-name\"\n              />\n            </Grid>\n            <Grid item xs={12}>\n              <TextField\n                required\n                fullWidth\n                onChange={handleChangeInput}\n                type=\"email\"\n                id=\"email\"\n                label={t(\"emailAddress\")}\n                name=\"email\"\n                autoComplete=\"email\"\n              />\n            </Grid>\n            <Grid item xs={12}>\n              <TextField\n                required\n                fullWidth\n                onChange={handleChangeInput}\n                inputProps={{ minLength: 7 }}\n                name=\"password\"\n                label={t(\"password\")}\n                type=\"password\"\n                id=\"password\"\n                autoComplete=\"new-password\"\n              />\n            </Grid>\n          </Grid>\n          <Button\n            type=\"submit\"\n            fullWidth\n            variant=\"contained\"\n            sx={{ mt: 3, mb: 2 }}\n          >\n            {t(\"SignUp\")}\n          </Button>\n          <Grid container justifyContent=\"flex-end\">\n            <Grid item>\n              <Link style={{ color: \"#1976d2\" }} to=\"/signin\">\n                {t(\"existingAccount\")}\n              </Link>\n            </Grid>\n          </Grid>\n        </Box>\n      </Box>\n    </Container>\n  );\n};\n"],"names":["SignUpPage","t","useTranslation","dispatch","useAppDispatch","useState","email","setEmail","password","setPassword","first_name","setFirst_name","last_name","userMap","handleChangeInput","e","target","name","value","handleSubmit","event","preventDefault","signUpService","signInThunk","error","axios","toast","response","data","detail","Container","component","maxWidth","CssBaseline","Box","sx","marginTop","display","flexDirection","alignItems","Avatar","m","bgcolor","LockOutlined","Typography","variant","onSubmit","mt","Grid","container","spacing","item","xs","sm","TextField","autoComplete","required","fullWidth","onChange","inputProps","minLength","id","label","autoFocus","type","Button","mb","justifyContent","style","color","to"],"sourceRoot":""}